console.log("%c Do 'Help()' For Commands","color: yellow; font-family:monospace; font-size: 20px");let Help=function(){console.log("There is No Help Function Yet")};class _{constructor(e){if(!e||"string"!=typeof e)throw new Error("Name Of Game Cannot Be undefined, and cannot be type: '"+typeof e+"' Expected 'string'");this.functionLoop=[],this.drawLoop=[],this.gameObjects=[],this.inputHandler={keysdown:{w:!1,a:!1,s:!1,d:!1},addEvents:()=>{document.addEventListener("keydown",(e=>{switch(e.key){case"ArrowLeft":case"a":this.GetLocalPlayer()&&this.GetLocalPlayer().package._Move("a"),this.inputHandler.keysdown.a=!0;break;case"ArrowRight":case"d":this.GetLocalPlayer()&&this.GetLocalPlayer().package._Move("d"),this.inputHandler.keysdown.d=!0;break;case"ArrowUp":case"w":case" ":this.GetLocalPlayer()&&this.GetLocalPlayer().package._Move("w"),this.inputHandler.keysdown.w=!0;break;case"ArrowDown":case"s":this.GetLocalPlayer()&&this.GetLocalPlayer().package._Move("s"),this.inputHandler.keysdown.s=!0}})),document.addEventListener("keyup",(e=>{switch(e.key){case"ArrowLeft":case"a":this.GetLocalPlayer()&&this.GetLocalPlayer().package._stopMoving("a"),this.inputHandler.keysdown.a=!1;break;case"ArrowRight":case"d":this.GetLocalPlayer()&&this.GetLocalPlayer().package._stopMoving("d"),this.inputHandler.keysdown.d=!1;break;case"ArrowUp":case"w":case" ":this.GetLocalPlayer()&&this.GetLocalPlayer().package._stopMoving("w"),this.inputHandler.keysdown.w=!1;break;case"ArrowDown":case"s":this.GetLocalPlayer()&&this.GetLocalPlayer().package._stopMoving("s"),this.inputHandler.keysdown.s=!1}}))}},this._Save={saveSet:!1,saveData:{},Save:()=>{console.log("Saving Game"),window.localStorage.setItem(e+"SaveData",JSON.stringify(this._Save.saveData))},SetSave:e=>{if(this._Save.saveSet)throw new Error("Save File Has Already Been Set, Cannot Set Again");if("object"!=typeof e||Array.isArray(e))throw new Error("Save File Is A '"+typeof e+"' Expected 'object' (If same one could be an Array)");this._Save.saveSet=!0,this._Save.saveData=e},Load:()=>{const t=window.localStorage.getItem(e+"SaveData");return t?(console.log("Save Found, Overiting Save Object"),this._Save.saveData=JSON.parse(t),!0):(console.log("No Save File Found"),!1)},UpdateSave:(e,t,s)=>s?"string"!=typeof e?(console.error("Variable Parameter is Not A String"),!1):(this._Save.saveData[e]=t,!0):"string"!=typeof e?(console.error("Variable Parameter is Not A String"),!1):null==this._Save.saveData[e]?(console.error("Variable Parameter Does not exist in saveData"),!1):(this._Save.saveData[e]=t,!0)},this.Debug={WhatMaxIsSayingIsTrue:()=>{console.error("Idiot.")}},this.Config={nativeWidth:1920,nativeHeight:1080,TooSmallScreen:void 0,sideScroller:!1,sideScrollerSideOffset:0,boundries:{left:void 0,right:void 0,top:void 0,bottom:void 0},g:500,WorldSize:{x:5e3,y:1500}},this._={Playing:!0,oldTimeStamp:0,mousePosition:{x:0,y:0},Cam:{x:0,y:0}},this.players=[],this.addPlayer=(e,t=!1)=>(this.players.forEach((t=>{if(e.id==t.id)return{error:!0,msg:"Player Already Exists"}})),e.isLocal=t,this.players.push(e),{error:!1,msg:"Added New Player"}),this.GetLocalPlayer=()=>{for(let e=0;e<this.players.length;e++){if(this.players[e].isLocal)return{error:!1,msg:"Succefully Found Player",package:player}}return{error:!0,msg:"Found No Local Player, Try .addPlayer(player, true) first"}},this._Init=()=>{if(null==window.localStorage)throw alert("Your browser does not support localStorage, therefore cannot save, please switch browsers"),new Error("LocalStorage Does Not Exist On this browser please switch Browser");this.canvas.element.style.display="block",this.canvas.element.innerHTML="<h1>Your Browser Cannot Handle HTML5, Please Switch To a Different Browser</h2>",this.canvas.addEvents(),window.requestAnimationFrame((e=>{this.Update(e)}))},this.detectCollisions=e=>{let t;const s=this.gameObjects;for(let e=0;e<s.length;e++)s[e].isColliding=!1;for(let i=e.cIndex+1;i<s.length;i++)t=s[i],e instanceof Player&&t instanceof Square&&e.collisionDetection(t)},this.Draw=()=>{const e=this.Config.nativeWidth,t=this.Config.nativeHeight,s=window.innerWidth,i=window.innerHeight,a=Math.min(s/e,i/t),o=this.canvas.ctx;if(o.setTransform(a,0,0,a,0,0),this.Config.sideScroller)if(this.GetLocalPlayer().error)console.error(this.GetLocalPlayer().msg);else{const a=this.GetLocalPlayer().package;this._.Cam.x=clamp(-a.x+e/3,-this.Config.WorldSize.x+s,0),this._.Cam.y=clamp(-a.y+t/2,-this.Config.WorldSize.y+i-950,10)}o.clearRect(0,0,e,t),e<=this.Config.WorldSize.x&&t<=this.Config.WorldSize.y&&o.translate(this._.Cam.x,this._.Cam.y),o.scale(1,1),window.dispatchEvent(new Event("Game:BeforeDrawLoop"));for(let e=0;e<this.drawLoop.length;e++){const t=this.drawLoop[e];null!=t.Draw&&t.Draw(o)}o.strokeRect(0,0,this.Config.WorldSize.x,this.Config.WorldSize.y),window.dispatchEvent(new Event("Game:AfterDrawLoop"))},this.Update=e=>{const t=(e-this._.oldTimeStamp)/1e3;if(this._.oldTimeStamp=e,!t||NaN==t||t>1)return console.warn("deltaTime is NaN Or Time Between Frames Is Too Great, Skipping Frame"),void requestAnimationFrame(this.Update);if(!this._.Playing)return this.Draw(),void requestAnimationFrame(this.Update);for(let e=0;e<this.functionLoop.length;e++){const s=this.functionLoop[e];null!=s.Update&&s.Update(t)}for(let e=0;e<this.gameObjects.length;e++){const t=this.gameObjects[e];this.detectCollisions(t)}window.dispatchEvent(new Event("Game:UpdateLoop")),this.Draw(),requestAnimationFrame(this.Update)},this.canvas={_IsFocused:!0,TooSmallEventDispatched:!1,SizeOfViewport:{w:void 0,h:void 0},element:document.getElementById("canvas"),ctx:void 0,resize:()=>{const e=this.Config.nativeWidth,t=this.Config.nativeHeight,s=window.innerWidth,i=window.innerHeight,a=Math.min(s/e,i/t);this.canvas.ctx=this.canvas.element.getContext("2d"),this.canvas.element.style.width=e*a+"px",this.canvas.element.style.height=t*a+"px",this.canvas.element.width=e*a,this.canvas.element.height=t*a,this.canvas.SizeOfViewport.w=e*a,this.canvas.SizeOfViewport.h=t*a,this.canvas.ctx.setTransform(a,0,0,a,0,0),a<.5&&!this.canvas.TooSmallEventDispatched?(this.canvas.element.dispatchEvent(new Event("ShowScreenTooSmallElement")),this.canvas.TooSmallEventDispatched=!0):a>=.5&&this.canvas.TooSmallEventDispatched&&(this.canvas.element.dispatchEvent(new Event("HideScreenTooSmallElement")),this.canvas.TooSmallEventDispatched=!1),this.canvas.ctx.imageSmoothingEnabled=a<1},getMousePosition:()=>this._.mousePosition,onMouseMove:e=>{var t=Game.canvas.element.getBoundingClientRect();e.preventDefault(),e.stopPropagation();var s=Game.canvas.ctx.getTransform(),i=parseInt(e.clientX-t.left),a=parseInt(e.clientY-t.top);const o=s.invertSelf();this._.mousePosition={x:Math.round(i*o.a+a*o.c+o.e),y:Math.round(i*o.b+a*o.d+o.f)}},addEvents:()=>{if(!this.canvas.element)throw new Error("Canvas Is Not Reachable, Try adding a canvas tag with an id of 'canvas'");if(this.canvas.resize(),this.inputHandler.addEvents(),window.addEventListener("resize",this.canvas.resize),window.addEventListener("blur",(()=>{this.canvas._IsFocused=!1,this._.Playing=!1})),window.addEventListener("focus",(()=>{this.canvas._IsFocused=!0,this._.Playing=!0})),document.addEventListener("mousemove",this.canvas.onMouseMove),this.Config.TooSmallScreen){if(!(this.Config.TooSmallScreen instanceof Element))throw new Error("Config.TooSmallScreen Variable is Not A Element. Please do .Config.TooSmallScreen = documet.getElementById()");this.canvas.element.addEventListener("ShowScreenTooSmallElement",(e=>{this.canvas.element.style.display="none",this.Config.TooSmallScreen.style.display="block"})),this.canvas.element.addEventListener("HideScreenTooSmallElement",(e=>{this.canvas.element.style.display="block",this.Config.TooSmallScreen.style.display="none"}))}}}}}function _GetRndInteger(e,t){return Math.floor(Math.random()*(t-e+1))+e}function _Clamp(e,t,s){return e<t?t:e>s?s:e}function _rectIntersect(e,t,s,i,a,o,n,h){return!(a>s+e||e>n+a||o>i+t||t>h+o)}function _circleIntersect(e,t,s,i,a,o){return(e-i)*(e-i)+(t-a)*(t-a)<=(s+o)*(s+o)}function clamp(e,t,s){return e<t?t:e>s?s:e}class gameObject{constructor(e,t=!1,s=0,i=0,a=0){this.x=s,this.y=i,this.vy=0,this.vx=0,this.mass=a,this.Game=e,this.isStatic=t,this.isColliding=!1,this.beforeDestroy=()=>{},this.afterDestroy=()=>{}}Destroy(){this.beforeDestroy();const e=this.Game.functionLoop.indexOf(this),t=this.Game.drawLoop.indexOf(this),s=this.Game.gameObjects.indexOf(this);this.Game.functionLoop[e]&&this.Game.functionLoop.splice(e,1),this.Game.drawLoop[t]&&this.Game.drawLoop.splice(t,1),this.Game.gameObjects[s]&&this.Game.gameObjects.splice(s,1),this.afterDestroy()}}class Square extends gameObject{constructor(e,t=!1,s=0,i=0,a=50,o=50,n=0){super(e,t,s,i,n),this.w=a,this.h=o,this.c="black",this.gravityMax=1e4,this.isOnGround=!1,this.collisionEnabled=!0,this.isColliding=!1,this.isStatic||e.functionLoop.push(this),e.drawLoop.push(this),this.cIndex=e.gameObjects.length,e.gameObjects.push(this)}EnableCollision(){this.collisionEnabled||(this.collisionEnabled=!0,this.cIndex=Game.gameObjects.length,Game.gameObjects.push(this))}DisableCollision(){if(this.collisionEnabled){this.collisionEnabled=!1;const e=this.Game.gameObjects.indexOf(this);this.Game.gameObjects[e]&&(console.log(this.Game.gameObjects),this.Game.gameObjects.splice(e,1),console.log(this.Game.gameObjects))}}Draw(e){e.fillStyle=this.c,e.fillRect(this.x,this.y,this.w,this.h)}Update(e){e&&(this.isStatic||(this.vy<this.gravityMax&&(this.vy+=this.Game.Config.g*e),this.x+=this.vx*e,this.y+=this.vy*e,null!=this.Game.Config.boundries.left?this.x<=this.Game.Config.boundries.left&&(this.x=this.Game.Config.boundries.left):null!=this.Game.Config.boundries.right&&this.x>=this.Game.Config.boundries.right&&(this.x=this.Game.Config.boundries.right),null!=this.Game.Config.boundries.top?this.y<=this.Game.Config.boundries.top&&(this.y=this.Game.Config.boundries.top):null!=this.Game.Config.boundries.bottom&&this.y>=this.Game.Config.boundries.bottom&&(this.y=this.Game.Config.boundries.bottom)))}}class Player extends Square{constructor(e,t=!1,s=0,i=0,a=50,o=50,n=100,h=10,r=-15,l=0,c=!0){super(e,t,s,i,n,c),this.w=a,this.h=o,this.speed=h,this.jumppower=r,this.id=l,this.isLocal=!0,this.isStatic=!1}collisionDetection(e){this.x+this.w<e.x||this.x>e.x+e.w||this.y+this.h<e.y||this.y>e.y+e.h?(Game.inputHandler.keysdown.w&&this._Move("w"),Game.inputHandler.keysdown.a&&this._Move("a"),Game.inputHandler.keysdown.s&&this._Move("s"),Game.inputHandler.keysdown.d&&this._Move("d")):this.narrowPhase(e)}narrowPhase(e){let t=Math.abs(this.y-(e.y+e.h)),s=Math.abs(this.x+this.w-e.x),i=Math.abs(this.x-(e.x+e.w)),a=Math.abs(this.y+this.h-e.y);this.y<=e.y+e.h&&this.y+this.h>e.y+e.h&&t<s&&t<i?this.y=e.y+e.h:this.x<=e.x+e.w&&this.x+this.w>e.x+e.w&&i<t&&i<a?this.x=e.x+e.w:this.y+this.h>=e.y&&this.y<e.y&&a<s&&a<i?(this.y=e.y-this.h,this.vy=0,this.isOnGround=!0):this.x+this.w>=e.x&&this.x<e.x&&s<t&&s<a&&(this.x=e.x-this.w,this.vx=0)}_Move(e){switch(e){case"w":this.isOnGround&&(this.vy=this.jumppower,this.isOnGround=!1,console.log("jumped"));break;case"a":this.vx=-this.speed;break;case"d":this.vx=this.speed}}_stopMoving(e){switch(e){case"w":console.log("let go of jump");break;case"a":case"d":this.vx=0}}}let levelData=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];class World{constructor(e,t){this.Game=t,this.data=e,this.tiles=[],this.regen(this.data)}regen(e){this.data=e;for(let e=0;e<this.tiles.length;e++){const t=this.tiles[e];t instanceof gameObject&&t.Delete()}this.tiles=[];for(let t=0;t<e.length;t++){e[t];let s=[];e[t].forEach((e=>{s.push(e)})),this.tiles.push(s)}let t=0,s=0;for(let i=0;i<e.length;i++){t=0;for(let a=0;a<e[i].length;a++){if(1==e[i][a]){let e=new Square(Game,!0,t,s,50,50);this.tiles[i][a]=e}else 0==e[i][a]&&(this.tiles[i][a]=void 0);t+=50}s+=50}}setTile(e,t){this.deleteTile(e),(void 0===t||t instanceof gameObject)&&(this.tiles[e.i][e.j]=t)}deleteTile(e){this.tiles[e.i][e.j]&&(this.tiles[e.i][e.j].Destroy(),this.tiles[e.i][e.j]=void 0)}}
